>>>>>What is linux?
>It's an opensource operating system; FREE
>It's lightweight and uses system resources efficiently
>while linux isn't used on many personal desktops, it dominates the market of servers
>there are many linux distributions, for example: redhat enterprise linux (RHEL), ubuntu, etc

Common Linux Commands:
>ls
	>>list files in current directory
>ls -a
	>>list even the hidden files, the "-a" is a command flag
>cd
	>>change directory (directory=folder)
>man
	>>manual - like a tooltip option
>pwd
	>>print working directory
>mkdir
	>>make a directory
>rmdir
	>>remove a director
>touch
	>>makes a new file
>cp
>cp [file source] [file destination]
	>>copies a file
>mv
	>>move a file
>echo
	>>print whatever message it is given to the console
	>> or you can use it to input into a file
>grep
	>>search files or folders
>>wget
	>>downloads from a URL
>>nano/vi
	>>opens a text editor
	>>for vi editor commands
		https://www.cs.colostate.edu/helpdocs/vi.html
>>sudo
	>>allows you to run commands as a super user
	>>super user do (sudo)
>>chmod
	>>changing file permissions
	>>chmod 777 test.txt
	
	[owner][group][everyone else]
	0 = no permission
	1 = execute
	2 = write
	3 = execute + write
	4 = read
	5 = read + execute
	6 = read + write
	7 = all

>>ps
	>>allows us to look at current processes that are
		running on our machine
	>>some of the optiosn for ps are
		a = show processes for all users
		u = display the process's user/owner
		x = also show processes not attached to a terminal
	>>so we can run commands like this
		sudo ps aux | grep 'jar'
		>>this would file all process with "jar" in the description

>>kill
	>>kill -l
		this let's us see all the kill codes
	>>for example:
		signal name	signal value	signal effect
		SIGHUP		1		Hangup
		SIGINT		2		Interrupt from keyboard
		SIGKILL		9		Kill signal
		SIGTERM		15		Terminal signal
		SIGSTOP		17, 19, 23	Stop the process
	>>example syntax
		sudo kill -9 [pid]
		sudo kill -9 37899


>>there are MORE commands, this is just a taste, for example "cat"

>>What is the ps command







>>>>Also, what is yum?
>yum is a package manager, it allows you to download and install software on your linux machine
>>>>>Also, what is ssh?
>secure shell
>a way to securely transfer information/data from one place to another
>we will use ssh to get into our EC2




///////////////////////
LET'S CONNECT TO OUR EC2 INSTANCE IN AWS
https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-methods.html
///////////////////////

my public DNS:	ec2-52-14-14-207.us-east-2.compute.amazonaws.com
my public ip:	52.14.14.207

(luckily for us, git bash is also an ssh client!!! So we're going to open a gitbash in the same directory as our pem file)

ssh -i [path to my pem file] ec2-user@[my public dns]
ssh -i ./trevasaurusrex.pem ec2-user@ec2-52-14-14-207.us-east-2.compute.amazonaws.com

(to exit an ec2 just type "exit" into your terminal)



//////////////////////
ONCE WE'RE CONNECTED LET'S CONFIGURE OUR INSTANCE WITH OUR SOFTWARES/PACKAGES
//////////////////////
-----let's start by creating a simple directory
	mkdir git_repos

------let's install git on our ec2, so we can use the script that i've uploaded
	sudo yum install git -y

-----let's pull the training repo to this ec2
	git clone [url]

-----navigate to the script i've created for you then run that script
	sh [script-name]
	sh full-script.sh
	>>>the script i've prepared installs updates for yum,
		nodejs, java 8, maven, jenkins, docker
	>>>I did NOT create this script off the top of my head,
		I got to the various websites and go to their
		linux installation pages to get the pieces of the script
	>>>for example:
		https://docs.docker.com/engine/install/ubuntu/



////////////////////////////
NOW, LET'S SEE IF WE CAN RUN OUR SPRINGBOOT PROJECT ON A DEDICATE SERVER
////////////////////////////
-------side topic: maven lifecycle
	example: mvn clean package
	>>https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

------next, nagivate to our Pet-1 project (in the same folder as its pom.xml
	mvn clean package

----next, navigate into our target folder
----then run the jar file
	java -jar docker-springboot-demo.jar

------how do we kill the server?
	hit ctrl + c to kill the process

-------can we run it detached?
	nohup java -jar docker-springboot-demo.jar &

	>>the "&" runs the process detached from the terminal
		so that you may still type in terminal commands
		BUT if the process has output, it will still put
		that output into this terminal
	>>nohup is a command that lets you start a process, put the output
		of that process into another file, AND ignore hangup signals
		>notice, that our output is now appear in a file
		called "nohup.out"

-------let's talk about how to kill a detached process
	>>first, let's find its pid
	sudo ps aux | grep 'jar'
	
	>>next, kill it
	sudo kill -9 [pid]




