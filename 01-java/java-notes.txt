>>>>>>What is Java?
>An object oriented programming language based in C and maintained by Oracle.

>>>>>>Why Java? Why use Java?
-Platform Agnostic (doesn't matter what OS is being used)
	>"Write once, run anywhere"
	>because of the JVM, We'll talk more about this in a sec
-Widely Popular & Grandfathered in
	>"Grandfathered in" means that many companies are using Java
		so it isn't going away anytime soon
-Rich API (lots of libraries) & documentation
-Easy to use
	-based in C
	-Object Oriented
	-Java is Strongly typed (easier to debug)
	-versatile
	-Garbage Collection
	-You don't have to use pointers
	-multithreaded
-FREE!!!


>>>>>>WHAT IS AN OBJECT?
>An instance of a class
>An object has State and Behavior.
	>States are attributes of the object (Variables)
	>Behaviors are actions the object can take (Methods)
>It's a virtual representation of a real world object/entity.
	>THIS makes coding easier to understand since it mimics the real world,
		something we already understand.


>>>>>>>WHAT IS A CLASS?
>A class is a  blueprint for objects.
>They are used to create objects, it's a template.
>There can be MANY objects made form the one blueprint....there will only ever be one blueprint for this specific type of object.


>>>Tangent: What is the difference between a function and a method?
>A function is a block of code/functionality.
>A method is a block of code/functionality THAT IS ATTACHED TO AN OBJECT.


>>>>>>What is OOP?
>Object Oriented Programming
>Proramming that utilizes object to simulate the real world

>>>>>What are the Four Pillars of OOP?
APIE is a helpful acronym

Abstraction- Demonstrating WHAT something does, without revealing HOW that action is performed.
	aka HIding Implementation/functionality.

	example: Santa claus brings us an iPhone when we write a letter, we dont' know HOW
		Santa  gets that iPhone.

	WHERE can we find this in code?
		Abstract Classes & Interfaces

Polymorphism- The ability for an entity to behavior/act differently depending
	on the scenario/stimuli
	aka Polymorphism means "many forms".
	
	example: water, water can act differently depending on the temp or container

	WHERE can we find this in code?
		overloading, overriding, upcasting, downcasting, generics, etc
	

Inheritance- The passing of attributes/behaviors from one entity to another.

	example: an older sibling can "pass down" their old clothes to a younger sibling
	exmaple2: DNA, you are passed your DNA from your parents

	WHERE can we find this in code?
		"extending" a class/interface/etc

Encapsulation- The restriction of direct access.

	example: vending machine, YOU dont' get the snickers, the machine does

	WHERE can we find this in code?
		public getters and setters, private fields


>>>>>>>WHAT is the heap?
>the heap is the allowable memory space your operating gives you for your program's runtime.


>>>>>>what is the stack?
>the stack is a structured memory space inside of the heap used to keep track of the program's order of operations, method calls, local variables, etc. (NOT objects and arrays)
>a stack is last in first out (LIFO) aka first in last out (FILO)

>>>>btw...what is the counterpart to a stack?
>Queue
>a queue is first in first out (FIFO)



---------------------------
>>>>>>>>>>>..EXCEPTION HANDLING IN JAVA
What is an exception?
	An exceptional event (aka issue) that arises in your program's logic. More than likely
	the programmer's logic is faulty or dangerous or careless.

	examples:
		ArrayIndexOutOfBoundsException
		ArithmeticException
		FileNotFoundException

What is an error?
	An exceptional event (aka issue) that arises OUTSIDE of your program's logic. More than
	likely the issue is with your runtime environment or system.

	examples:
		StackOverflowError
		OutOfMemoryError


What is the hirarchy of exception handling in Java?

			(	Throwable, class, checked	)
				/		\
	(Exception, class, checked)		(Error, class, unchecked)
		|
	(RuntimeException, class, unchecked)


keywords associated with exceptionhandling in java?
-try, catch, finally
-throw
-throws

How do we "handle" an exception/error?
	We use a try/catch block
	(ALSO we can duck exceptions using the "throws" keyword

What is "checked"?
	The compiler will give you a syntax error if you do NOT "handle" the logic that could
	potentially thorw an exception/error. In short, when you do NOT handle an exception
	it will lead to a syntax error, the syntax error itself is NOT the exception being thrown.

What is "unchecked"?
	The compiler will NOT force you to "handle" logic that could potentially throw an
	exception/error. meaning there will be no syntax error created.
	Note: if you EVER see an unchecked YOU need to refactor your code, because you as
		the developer have made a mistake.



----------------------
>>>>>>What is a Collection? Or the Collection API in java?
>A collection is a data structure that contains objects. Aka an object that contains other objects.
>There are MANY types of data structures in computer science.
>The Collection API in java has already created a variety of datastructures for you to use; that is to say, you don't have to create them from scratch. So you don't have to waste company time creating the SAME datastructures for EVERY new application you make.
>Lastly, the built datastructures are EXTREMELY optimized.

>>>>>What is a List?
>A List is an indexable group of data entries, duplicates are allowed

>>>>What is a Set?
>A Set is a group of non-indexable data entries, NO DUPLICATES ARE ALLOWED

>>>>What is a Queue?
>A Queue is a group of data entries that has an order to them, and is designed remove elements in a specific way: first in first out (FIFO).


>>>>>What is a Map?
>A Map is a key-value pair. It holds a group of data entries, but each data entries (value) can only be retrieved if you have a "key" to reference it


>>>>>>>>>>>>>>>>>Threads>>>>>>>>>>>>
>>>What is a thread?
>A process. A line of logic. (aka a series of instructions)

>>>What is a subprocess?
>A child process that occupies the same heap as the parent process.
>In java, all threads are ACTUALLY subprocesses
	>>This means that threads in Java have the same heap, but different stacks
	
>>>What is multithreading?
>Is when multiple processes run concurrently (at the same time)


>>>In Java, what are the states of a thread?
-New	-	the thread is new (just created)
-Runnable-	it's able to have processor time (not sure if CURRENTLY running)
-Waiting-	pauses functionality until a specific event has happened
-Timed Waiting-	pauses functionality until a certain time has passed
-Blocked-	it can't continue its process because another
			process has hogged/claimed a resource
-Terminated-	finished


>>>>What does the synchronized keyword do in Java?
>The synchronized keyword goes on methods
>For a synchronized method two threads can NOT access the method
	concurrently. THAT specific method inside of THAT specific object.
	>that is to say, that if method1() is synchronized then ThreadOne and
		ThreadTwo cannot access method1() inside of ObjectOne AT THE SAME TIME. BUT ThreadOne can access method1() inside of ObjectOne AT The
		SAME TIME AS ThreadTwo accessing method1() inside of ObjectTwo.









