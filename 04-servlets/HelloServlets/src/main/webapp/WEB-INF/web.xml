<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>HelloServlets</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>ServletHTMLDemo.html</welcome-file>
  </welcome-file-list>
  
  
  <!-- Two commons reason why tomcat may fail to start:
  One: the port is already in use
  Two: tomcat can't read your web.xml, probably because you have a typo or forgot some tags 
   -->
  
  
  <!-- DIRECT SERVLET CONFIGURATIONS -->
  <servlet>
  	<!-- "servlet-name" is basically creating a variable inside of the web.xml so you can reference
  		this servlet later with additional configurations -->
  	<servlet-name>DirectServletVariableName</servlet-name>
  	<!-- hold ctrl and hover over this package to make sure it is linked -->
  	<servlet-class>com.example.directservlet.DirectServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<!-- these are the said additional configurations -->
  	<servlet-name>DirectServletVariableName</servlet-name>
  	<!-- "url-pattern" is defining your endpoint for this servlet. Aka WHICH urls this servlet will service -->
  	<url-pattern>/direct</url-pattern>
  </servlet-mapping>
  
  <!-- INDIRECT SERVLET CONFIGURATIONS -->
  <servlet>
  	<servlet-name>IndirectServlet</servlet-name>
  	<servlet-class>com.example.indirectservlet.IndirectServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>IndirectServlet</servlet-name>
  	<url-pattern>/indirect</url-pattern>
  </servlet-mapping>
  
  <!-- SESSION SERVLET CONFIGURATIONS -->
  <servlet>
  	<servlet-name>SesServ</servlet-name>
  	<servlet-class>com.example.sessionservlet.SessionServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>SesServ</servlet-name>
  	<url-pattern>/ses</url-pattern>
  </servlet-mapping>
  
  <!-- HELPER SESSION SERVLET CONFIGURATIONS -->
  <servlet>
  	<servlet-name>HelpSesServ</servlet-name>
  	<servlet-class>com.example.sessionservlet.HelperSessionServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>HelpSesServ</servlet-name>
  	<url-pattern>/helpses</url-pattern>
  </servlet-mapping>
</web-app>


